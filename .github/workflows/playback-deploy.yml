name: provision and deploy
on:
  workflow_dispatch:
jobs:
  provision-infra:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: get-code
        uses: actions/checkout@v4

      - name: install terraform
        uses: hashicorp/setup-terraform@v2.0.3

      - name: aws intergation using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.OIDC_ARN}} #oidc
          aws-region: ap-south-1

      - name: install ssh_key_pair
        run: ssh-keygen -t rsa -N "" -f "ec2_login_key"

      - name: initialize & format
        id: init
        run: |
          terraform init
          terraform fmt
        continue-on-error: true

      - name: check code validation
        id: validation
        run: terraform validate
        continue-on-error: true

      - name: check validation condition
        if: steps.validation.outcome == 'failure'
        run: |
          echo "terraform configurations are invalid, skipping further steps.."
          exit 1

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: v0.52.0

      - name: Show version
        run: tflint --version

      - name: Init TFLint
        run: tflint --init
        env:
          GITHUB_TOKEN: ${{ secrets.G_TOKEN }}

      - name: Run TFLint
        id: lint
        run: tflint -f compact
        # continue-on-error: true

      - name: Retry TFLint
        if: steps.lint.outcome == 'failure'
        run: |
          echo "error with terraform configurations"
          exit 1
        continue-on-error: true

      # - run: echo ${{ steps.lint.outcome.stdout }}
      # - run: echo ${{ steps.lint.outcome.stderr }}
      # - run: echo ${{ steps.lint.outcome.exitcode }}

      # - name: plan_apply
      #   id: plan
      #   run: terraform plan -out myplan
      #   continue-on-error: true

      # - name: retry_plan #(run on failure)
      #   if: steps.plan.outcome == 'failure'
      #   run: |
      #     echo "retrying plan.."
      #     terraform plan -out myplan || terraform plan -out myplan

      # - name: apply_plan
      #   id: apply
      #   run: terraform apply myplan
      #   continue-on-error: true

      # - name: Post-Deployment Outputs
      #   if: always()
      #   run: terraform output
        
      # - name: Failure Notification
      #   if: failure()
      #   run: |
      #     echo "Terraform provisioning Failed!"
      #     exit 1


 
  